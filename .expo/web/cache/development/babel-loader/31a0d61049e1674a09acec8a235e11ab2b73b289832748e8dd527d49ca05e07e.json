{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onPress\", \"children\", \"style\"];\nvar _jsxFileName = \"E:\\\\lab-midterm-usman448\\\\src\\\\components\\\\ui\\\\Button.js\";\nimport React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { styles } from '../../styles/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Button(_ref) {\n  let {\n      onPress,\n      children,\n      style\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const isCounterButton = children === '+' || children === '-';\n  return _jsxDEV(Pressable, Object.assign({\n    onPress: onPress,\n    style: style\n  }, rest, {\n    children: _jsxDEV(Text, {\n      style: isCounterButton ? {\n        color: 'white',\n        fontWeight: 'bold'\n      } : {},\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","Pressable","Text","StyleSheet","styles","jsxDEV","_jsxDEV","Button","_ref","onPress","children","style","rest","_objectWithoutPropertiesLoose","_excluded","isCounterButton","Object","assign","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["E:/lab-midterm-usman448/src/components/ui/Button.js"],"sourcesContent":["import React from 'react';\r\nimport { Pressable, Text, StyleSheet } from 'react-native';\r\nimport { styles } from '../../styles/styles'; // Styles import kiya agar use karna ho\r\n\r\n/**\r\n * Minimal UI Button (no styling on the text element itself).\r\n * Students style the Pressable wrapper via 'style' prop.\r\n */\r\nexport default function Button({ onPress, children, style, ...rest }) {\r\n  // Agar children Text hai (jaise '+', '-'), toh uska rang styles.js mein set hona chahiye\r\n  const isCounterButton = (children === '+' || children === '-');\r\n  \r\n  return (\r\n    <Pressable onPress={onPress} style={style} {...rest}>\r\n      {/* Text component ke liye koi hardcoded style nahi lagaya, \r\n        taaki styles.js se style override kiya ja sake (jaise ki white color) \r\n      */}\r\n      <Text style={isCounterButton ? { color: 'white', fontWeight: 'bold' } : {}}>\r\n        {children}\r\n      </Text>\r\n    </Pressable>\r\n  );\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,MAAM,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM7C,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAwC;EAAA,IAAvC;MAAEC,OAAO;MAAEC,QAAQ;MAAEC;IAAe,CAAC,GAAAH,IAAA;IAANI,IAAI,GAAAC,6BAAA,CAAAL,IAAA,EAAAM,SAAA;EAEhE,MAAMC,eAAe,GAAIL,QAAQ,KAAK,GAAG,IAAIA,QAAQ,KAAK,GAAI;EAE9D,OACEJ,OAAA,CAACL,SAAS,EAAAe,MAAA,CAAAC,MAAA;IAACR,OAAO,EAAEA,OAAQ;IAACE,KAAK,EAAEA;EAAM,GAAKC,IAAI;IAAAF,QAAA,EAIjDJ,OAAA,CAACJ,IAAI;MAACS,KAAK,EAAEI,eAAe,GAAG;QAAEG,KAAK,EAAE,OAAO;QAAEC,UAAU,EAAE;MAAO,CAAC,GAAG,CAAC,CAAE;MAAAT,QAAA,EACxEA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}